services:
  application:
    build:
      context: D:\Pessoal\ChatBotBackend
      dockerfile: Application/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Application
      target: base
    container_name: Application
    depends_on:
      pdb:
        condition: service_started
    entrypoint: tail -f /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: http://+:5000
      DOTNET_USE_POLLING_FILE_WATCHER: '1'
      NUGET_FALLBACK_PACKAGES: /root/.nuget/fallbackpackages
    image: application:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages
        --additionalProbingPath /root/.nuget/fallbackpackages  "/app/bin/Debug/net5.0/Application.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    ports:
    - published: 5000
      target: 5000
    - target: 5000
    - published: 5001
      target: 5001
    - target: 5001
    tty: true
    volumes:
    - D:\Pessoal\ChatBotBackend\Application:/app:rw
    - C:\Users\facosta\vsdbg\vs2017u5:/remote_debugger:rw
    - C:\Users\facosta\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\facosta\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
    - C:\Program Files\dotnet\sdk\NuGetFallbackFolder:/root/.nuget/fallbackpackages:ro
    - C:\Users\facosta\.nuget\packages:/root/.nuget/packages:ro
    - D:\Pessoal\ChatBotBackend:/src:rw
  pdb:
    container_name: postgres_acomp
    environment:
      POSTGRES_DB: ChatBot
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
    image: postgres:alpine
    ports:
    - published: 5433
      target: 5432
    restart: always
    volumes:
    - db_volume:/var/lib/postgresql/data:rw
  webapp:
    build:
      context: D:\Pessoal\ChatBotBackend
      dockerfile: chatbotwebapp/Dockerfile
    depends_on:
      application:
        condition: service_started
    image: node:14.18.1-alpine
    ports:
    - published: 3000
      target: 3000
version: '3.4'
volumes:
  db_volume: {}